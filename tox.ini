[tox]
minversion = 3.10.0
requires =
    setuptools >= 30.0.0
    tox-venv >= 0.4.0
isolated_build = true
skip_missing_interpreters = true

envlist =
    lint
    clean
    docs
    py{3.6,3.7,3.8,3.9,3.10}-{asyncio,uvloop}
    pypy3-asyncio
    coverage

[testenv]
setenv =
    COVERAGE_FILE = .coverage.{envname}
    PYTHONUNBUFFERED = yes
    PYTHONWARNINGS = once::DeprecationWarning
passenv = *
deps =
    poetry>=1,<2
commands_pre =
    asyncio: poetry install -v
    uvloop: poetry install -E uvloop -v
commands =
    asyncio: poetry run py.test --basetemp="{envtmpdir}" --cov --cov-report= --cov-config=tox.ini --junitxml=test-results/{envname}/results.xml --event-loop=asyncio --bind-addr={env:AIOSMTPLIB_TEST_BIND_ADDR:localhost} --hypothesis-profile {env:HYPOTHESIS_PROFILE:dev} {posargs:--tb=short}
    uvloop: poetry run py.test --basetemp="{envtmpdir}" --cov --cov-report= --cov-config=tox.ini --junitxml=test-results/{envname}/results.xml --event-loop=uvloop --bind-addr={env:AIOSMTPLIB_TEST_BIND_ADDR:localhost} --hypothesis-profile {env:HYPOTHESIS_PROFILE:dev} {posargs:--tb=short}
depends =
    py{3.6,3.7,3.8,3.9,3.10}-{asyncio,uvloop}: clean
    pypy3-asyncio: clean
    coverage: py3.6-asyncio, py3.7-asyncio, py3.8-asyncio, py3.9-asyncio, py3.10-asyncio, py3.6-uvloop, py3.7-uvloop, py3.8-uvloop, py3.9-uvloop, py3.10-uvloop, pypy3-asyncio

[testenv:clean]
deps = coverage>=5,<6
skip_install = true
setenv =
    COVERAGE_FILE = .coverage
commands =
    coverage combine
    coverage erase

[testenv:docs]
basepython = python3.8
skip_install = true
changedir = docs
commands_pre = poetry install -E docs -v
commands =
    poetry run sphinx-build {posargs:-nWT} -b doctest -d {envtmpdir}/doctrees . {envtmpdir}/html
    poetry run sphinx-build {posargs:-nWT} -b dummy -d {envtmpdir}/doctrees .  {envtmpdir}/html

[testenv:lint]
deps =
    pre-commit
    {[testenv]deps}
basepython = python3.8
skip_install = true
commands =
    pre-commit run --all-files --show-diff-on-failure
    poetry check

[testenv:coverage]
deps = coverage>=5,<6
skip_install = true
setenv =
    COVERAGE_FILE = .coverage
commands =
    coverage combine
    coverage xml
    coverage html
    coverage report --fail-under=90

[flake8]
min_python_version = 3.6.0
max-line-length = 80
select = C,E,F,W,B,B950
ignore = E203,E501,W503
exclude = .tox,.git,docs

[isort]
line_length = 88
lines_after_imports = 2
multi_line_output = 3
default_section = THIRDPARTY
known_first_party = aiosmtplib
include_trailing_comma = true

[coverage:run]
source = aiosmtplib
branch = true
parallel = true

[coverage:report]
show_missing = true
exclude_lines =
    pass
    pragma: no cover
    raise NotImplementedError
    if __name__ == .__main__.:

[bandit]
exclude = tests
