variables:
  CI: 'true'

trigger:
- master

resources:
  containers:
  - container: py352
    image: python:3.5.2
  - container: py35
    image: python:3.5-buster
  - container: py36
    image: python:3.6-buster
  - container: py37
    image: python:3.7-buster
  - container: py38
    image: python:3.8-rc-buster
  - container: py38
    image: python:3.8-rc-buster
  - container: pypy35
    image: pypy:3.5-stretch
  - container: pypy36
    image: pypy:3.6-stretch

jobs:

- job: 'Test'
  pool:
    vmImage: 'Ubuntu-16.04'
  strategy:
    matrix:
      Python35:
        containerResource: py35
        TOXENV: 'clean,py35-asyncio,py35-uvloop,coverage'
      Python36:
        containerResource: py36
        TOXENV: 'clean,py36-asyncio,py36-uvloop,coverage'
      Python37:
        containerResource: py37
        TOXENV: 'clean,py37-asyncio,py37-uvloop,coverage'
      PyPy35:
        containerResource: pypy35
        TOXENV: 'clean,pypy35-asyncio,coverage'
  container: $[ variables['containerResource'] ]

  steps:
  - script: pip install --user tox tox-venv
    displayName: 'Install Tox'
  - script: tox
    displayName: 'Run Tox'
  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: 'test-results/**/results.xml'
      testRunTitle: '$(python.version) Test Run'
  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
      failIfCoverageEmpty: true
