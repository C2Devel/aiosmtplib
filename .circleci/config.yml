version: 2.1

orbs:
  codecov: codecov/codecov@1.0.5

commands:
  install_prerequisites:
    description: "Install poetry and tox"
    steps:
      - restore_cache:
          keys:
            - v1-prereqs
          name: "Restoring prerequisites cache"
      - run:
          command: mkdir -p ~/pip-cache
          name: "Creating pip cache dir"
      - run:
          command: mkdir -p ~/poetry-venvs
          name: "Creating poetry venv dir"
      - run:
          command: pip --cache-dir ~/pip-cache install --upgrade pip
          name: "Upgrading pip"
      - run:
          command: pip --cache-dir ~/pip-cache install poetry
          name: "Installing poetry"
      - run:
          command: poetry config settings.virtualenvs.path ~/poetry-venvs
          name: "Setting poetry venv dir"
      - run:
          command: poetry install -v
          name: "Installing dependencies via poetry"
      - save_cache:
          paths:
            - ~/pip-cache
            - ~/poetry-venvs
          key: v-prereqs
          name: "Saving prerequisites cache"

  cache_tox_workdir:
    description: "Cache tox workdir"
    parameters:
      cache_key:
        type: string
      tox_runs:
        type: steps
        default: []
    steps:
      - restore_cache:
          keys:
            - v6-tox-<< parameters.cache_key >>-{{ checksum "poetry.lock" }}-{{ .Branch }}
            - v6-tox-<< parameters.cache_key >>-{{ checksum "poetry.lock" }}-
          name: "Restoring tox envs cache: << parameters.cache_key >>"
      - run:
          command: mkdir -p ~/tox-workdir
          name: "Creating tox work dir"
      - steps: << parameters.tox_runs >>
      - save_cache:
          paths:
            - ~/tox-workdir
          key: v6-tox-<< parameters.cache_key >>-{{ checksum "poetry.lock" }}-{{ .Branch }}
          name: "Saving tox workdir cache: << parameters.cache_key >>"

  run_tox:
    description: "Run tox"
    parameters:
      toxenv:
        type: string
        default: "ALL"
    steps:
      - run:
          command: tox --workdir ~/tox-workdir -e << parameters.toxenv >>
          name: "Running tox: << parameters.toxenv >>"

  install_and_run_toxenvs:
    description: "Install and run tox with multiple envs"
    parameters:
      toxenvs:
        type: string
        default: "ALL"
    steps:
      - install_prerequisites
      - cache_tox_workdir:
          cache_key: << parameters.toxenvs >>
          tox_runs:
            - run_tox:
                toxenv: << parameters.toxenvs >>
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
      - store_artifacts:
          path: coverage.xml
      - store_artifacts:
          path: htmlcov
      - codecov/upload:
          file: coverage.xml

jobs:

  lint:
    docker:
      - image: python:3.7
    steps:
      - checkout
      - install_prerequisites
      - cache_tox_workdir:
          cache_key: lint
          tox_runs:
            - run_tox:
                toxenv: lint

  docs:
    docker:
      - image: python:3.7
    steps:
      - checkout
      - install_prerequisites
      - cache_tox_workdir:
          cache_key: docs
          tox_runs:
            - run_tox:
                toxenv: docs

  py352:
    docker:
      - image: python:3.5.2
    steps:
      - checkout
      - install_and_run_toxenvs:
          toxenvs: clean,py35-asyncio,py35-uvloop,coverage

  py35:
    docker:
      - image: python:3.5-stretch
    steps:
      - checkout
      - install_and_run_toxenvs:
          toxenvs: clean,py35-asyncio,py35-uvloop,coverage

  py36:
    docker:
      - image: python:3.6-stretch
    steps:
      - checkout
      - install_and_run_toxenvs:
          toxenvs: clean,py36-asyncio,py36-uvloop,coverage

  py37:
    docker:
      - image: python:3.7-stretch
    steps:
      - checkout
      - install_and_run_toxenvs:
          toxenvs: clean,py37-asyncio,py37-uvloop,coverage

  pypy35:
    docker:
      - image: pypy:3.5-stretch
    steps:
      - checkout
      - install_and_run_toxenvs:
          toxenvs: clean,pypy3-70-asyncio,coverage

  pypy36:
    docker:
      - image: pypy:3.6-stretch
    steps:
      - checkout
      - install_and_run_toxenvs:
          toxenvs: clean,pypy3-71-asyncio,coverage

  py38:
    docker:
      - image: python:3.8-rc-buster
    steps:
      - checkout
      # uvloop on py38 is broken :(
      - install_and_run_toxenvs:
          toxenvs: clean,py38-asyncio,coverage

  deploy_to_pypi:
    docker:
      - image: python:3.7
    steps:
      - checkout
      - install_prerequisites
      - run:
          name: Building packages
          command: poetry build
      - run:
          name: Configuring pypi
          command: |
            poetry config http-basic.pypi $PYPI_USERNAME $PYPI_PASSWORD
      - run:
          name: Uploading to Test PyPI
          command: |
            poetry config repositories.testpypi https://test.pypi.org/simple
            poetry publish --repository testpypi --username $TESTPYPI_USERNAME --password $TESTPYPI_PASSWORD
      - run:
          name: Uploading to PyPI
          command: poetry publish --repository pypi --username $PYPI_USERNAME --password $PYPI_PASSWORD

workflows:
  version: 2
  lint_and_test:
    jobs:
      - lint:
          filters:
            tags:
              only: /.*/
      - docs:
          filters:
            tags:
              only: /.*/
      - py352:
          requires:
            - lint
          filters:
            tags:
              only: /.*/
      - py35:
          requires:
            - lint
          filters:
            tags:
              only: /.*/
      - py36:
          requires:
            - lint
          filters:
            tags:
              only: /.*/
      - py37:
          requires:
            - lint
          filters:
            tags:
              only: /.*/
      - pypy35:
          requires:
            - lint
          filters:
            tags:
              only: /.*/
      - pypy36:
          requires:
            - lint
          filters:
            tags:
              only: /.*/
      - py38:
          requires:
            - lint
          filters:
            tags:
              only: /.*/
      - deploy_to_pypi:
          requires:
            - lint
            - docs
            - py352
            - py35
            - py36
            - py37
            - py38
            - pypy35
            - pypy36
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
